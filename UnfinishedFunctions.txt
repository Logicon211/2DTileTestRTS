//THIS FUNCTION WAS A TEST. CURRENTLY WON'T WORK AT THE MOMENT DUE TO IT EXPECTING THE MAPTILE ARRAY TO BE GAMEOBJECTS
	public List<Vector2> BuildPath(List<Vector2> path, Vector2 startPoint, int x, int y, Direction direction) {
		//Assuming the coordinates passed into this function equates to a non-null map tile
		//Will try to traverse the tiles clockwise (up - right - down - left)

		//currently putting path nodes for a polygon collider on the center of each node
		//Next will just try enabling collision boxes on just the edges
		//Also need to be able to put edges around multiple blocks of tiles, and on the inner empty spaces

		bool tileUp = mapTiles[x, y].CheckTileUp ();
		bool tileRight = mapTiles[x, y].CheckTileRight ();
		bool tileDown = mapTiles[x, y].CheckTileDown ();
		bool tileLeft = mapTiles[x, y].CheckTileLeft();

		if (startPoint.Equals (new Vector2 (x, -y)) && path.Count > 1) {
			//We're back to the beginning, return the path
			return path;
		}
		if (direction == Direction.Up) {
			if (tileLeft) {
				//If the tile to the left
				AddNodeToPath(path, x - 1, -y);
				path = BuildPath (path, startPoint, x - 1, y, Direction.Left);
			} else if (tileUp) {
				//If there's a tile above us 
				AddNodeToPath(path, x, -(y - 1));
				path = BuildPath (path, startPoint, x, y - 1, Direction.Up);
			} else if (tileRight) {
				//if there's a tile to the right
				AddNodeToPath(path, x + 1, -y);
				path = BuildPath (path, startPoint, x + 1, y, Direction.Right);
			} else if (tileDown) {
				//If there's a tile below us
				AddNodeToPath(path, x, -(y + 1));
				path = BuildPath (path, startPoint, x, y+1, Direction.Down);
			}
		} else if (direction == Direction.Right) {
			if (tileUp) {
				//If there's a tile above us
				AddNodeToPath(path, x, -(y - 1));
				path = BuildPath (path, startPoint, x, y - 1, Direction.Up);
			} else if (tileRight) {
				//if there's a tile to the right
				AddNodeToPath(path, x + 1, -y);
				path = BuildPath (path, startPoint, x + 1, y, Direction.Right);
			} else if (tileDown) {
				//If there's a tile below us
				AddNodeToPath(path, x, -(y + 1));
				path = BuildPath (path, startPoint, x, y+1, Direction.Down);
			} else if (tileLeft) {
				//If the tile to the left
				AddNodeToPath(path, x - 1, -y);
				path = BuildPath (path, startPoint, x - 1, y, Direction.Left);
			}
		} else if (direction == Direction.Down) {
			if (tileRight) {
				//if there's a tile to the right
				AddNodeToPath(path, x + 1, -y);
				path = BuildPath (path, startPoint, x + 1, y, Direction.Right);
			} else if (tileDown) {
				//If there's a tile below us
				AddNodeToPath(path, x, -(y + 1));
				path = BuildPath (path, startPoint, x, y+1, Direction.Down);
			} else if (tileLeft) {
				//If the tile to the left
				AddNodeToPath(path, x - 1, -y);
				path = BuildPath (path, startPoint, x - 1, y, Direction.Left);
			} else if (tileUp) {
				//If there's a tile above us
				AddNodeToPath(path, x, -(y - 1));
				path = BuildPath (path, startPoint, x, y - 1, Direction.Up);
			}
		} else if (direction == Direction.Left) {
			if (tileDown) {
				//If there's a tile below us
				AddNodeToPath(path, x, -(y + 1));
				path = BuildPath (path, startPoint, x, y+1, Direction.Down);
			} else if (tileLeft) {
				//If the tile to the left
				AddNodeToPath(path, x - 1, -y);
				path = BuildPath (path, startPoint, x - 1, y, Direction.Left);
			} else if (tileUp) {
				//If there's a tile above us
				AddNodeToPath(path, x, -(y - 1));
				path = BuildPath (path, startPoint, x, y - 1, Direction.Up);
			} else if (tileRight) {
				//if there's a tile to the right
				AddNodeToPath(path, x + 1, -y);
				path = BuildPath (path, startPoint, x + 1, y, Direction.Right);
			}
		} 

		//Should never really end here;
		return path;


/********************************************************/
//Trying to generate one colider for the entire map:

//				gameObject.AddComponent<PolygonCollider2D>(); //collider for itself
//				PolygonCollider2D collider = gameObject.GetComponent<PolygonCollider2D>();
//
//				List<Vector2> path = new List<Vector2> ();
//				//Make collider?
//				//simple solution to draw a collider around the first block we encounter. Will need to handle breaks and more complete maps
//				int x = 0;
//				int y = 0;
//				for (x = 0; x < mapTiles.GetLength (0); x++) {
//					bool breakLoop = false;
//					for (y = 0; y < mapTiles.GetLength (1); y++) {
//						if(mapTiles[x,y] != null) {
//							breakLoop = true;
//							break;
//							//we should have coordinates of first tile hit
//						}
//						//	path.Add (node);
//						//	Vector2 node = new Vector2(x,-y);
//					}
//					if (breakLoop) {
//						break;
//					}
//				}
//				Vector2 startingNode = new Vector2 (x, -y);
//				path.Add(startingNode);
//				path = BuildPath(path, startingNode, x, y, Direction.Up);
//				collider.SetPath(0, path.ToArray());
//
				//This example sets up 2 paths, 2 boxes
//				collider.SetPath(0, path.ToArray());
//				collider.SetPath(1, path2.ToArray());